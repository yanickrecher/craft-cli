#!/bin/bash

# sed escaping function
# =========================================================================

function sedescape {
  sed -i '' "s/$(echo $1 | sed -e 's/\([[\/.*]\|\]\)/\\&/g')/$(echo $2 | sed -e 's/[\/&]/\\&/g')/g" $3
}

# =========================================================================

echo ""
echo "running setup-create-env-file"
echo ""

env=""
# get options/arguments
while getopts :e:h option
do
    case "${option}"
    in
        h) help="help";;
        e) env=${OPTARG};;
    esac
done

if [ "${help}" == "help" ]; then

cat << EOF

-------------------------------------------------------------------------
HELP setup-create-env-file
-------------------------------------------------------------------------

Erstellt die .env datei für Craft 3.
Der Befehl erwartet ein Argument -e für Environtment
erlaupte werte sind [local, stage, live].
Wird live oder stage gesetzt, so wird die datei automatisch
per ssh Tunnel auf die gewünschte Umgebung kopiert
(sofern diese in der .siteconfig datei definiert ist).

Optionen:
    -e      Setze die Umgebung local stage live

-------------------------------------------------------------------------

EOF
exit
fi

echo "Die benutze Umgebung ${env}"

if [ -z "${env}" ]; then
    echo "Die Umgebung wurde nicht definiert.";
    echo "Einer der folgenden Werte wird erwartet [local|stage|live]";
else

    . yaml-read



    if [ -z "${craft_secure_key}" ]; then
        #Es wurde kein Key in der .siteconfig.yaml gefunden
        php craft setup/security-key

        #Auslesen der geänderten .env Datei
        source .env

        env_secure_key=${SECURITY_KEY}

        #speichere neuen Key in die .siteconfig.yaml datei
        sedescape "craft_secure_key:" "craft_secure_key: ${SECURITY_KEY}" .siteconfig.yaml

    fi

    env_prefix=""

    if [ ${env} == "live" ]; then
        env_prefix="live"
        env_dbHost=${live_db_host}
        env_dbUser=${live_db_user}
        env_dbName=${live_db_name}
        env_dbPass=${live_db_pwd}
        env_systemEmail="craftcms@yr-designs.ch"
        env_emailSenderName=${sitename}
        env_hostname=""
        env_smtpPort=""

        scp_username=${live_username}
        scp_domain=${live_domain}
        scp_path=${live_path}
    fi

    if [ ${env} == "stage" ]; then
        env_prefix="stage"
        env_dbHost=${stage_db_host}
        env_dbUser=${stage_db_user}
        env_dbName=${stage_db_name}
        env_dbPass=${stage_db_pwd}
        env_systemEmail="craftcms@yr-designs.ch"
        env_emailSenderName=${sitename}
        env_hostname=""
        env_smtpPort=""

        scp_username=${stage_username}
        scp_domain=${stage_domain}
        scp_path=${stage_path}
    fi

    if [ ${env} == "local" ]; then
        env_dbHost=${local_db_host}
        env_dbUser=${local_db_user}
        env_dbName=${local_db_name}
        env_dbPass=${local_db_pwd}
        env_systemEmail="craftcms@yr-designs.ch"
        env_emailSenderName=${sitename}
        env_hostname="192.168.10.1"
        env_smtpPort="2525"
    fi


    if [ -z env_dbHost ] || [ -z env_dbUser ] || [ -z env_dbName ] || [ -z env_dbPass ]; then
    cat << EOF

Es sind nicht alle nötigen Variabeln in .siteconfig.yaml definiert:

    ${env}_db_host: ${env_dbHost}
    ${env}_db_name: ${env_dbUser}
    ${env}_db_user: ${env_dbName}
    ${env}_db_pwd:  ${env_dbPass}

EOF
    exit
    fi

    if [ ${env} == "local" ]; then
        rm .env
    fi

    cat > ".env${env_prefix}" << EOF
# The environment Craft is currently running in ('local', 'stage', 'production', etc.)
ENVIRONMENT="${env}"

# The secure key Craft will use for hashing and encrypting data
SECURITY_KEY="${env_secure_key}"

# The database driver that will be used ('mysql' or 'pgsql')
DB_DRIVER="mysql"

# The database server name or IP address (usually this is 'localhost' or '127.0.0.1')
DB_SERVER="${env_dbHost}"

# The database username to connect with
DB_USER="${env_dbUser}"

# The database password to connect with
DB_PASSWORD="${env_dbPass}"

# The name of the database to select
DB_DATABASE="${env_dbName}"

# The database schema that will be used (PostgreSQL only)
DB_SCHEMA="public"

# The prefix that should be added to generated table names (only necessary if multiple things are sharing the same database)
DB_TABLE_PREFIX="craft_"

# The port to connect to the database with. Will default to 5432 for PostgreSQL and 3306 for MySQL.
DB_PORT=""

EMAIL_SYSTEMADRESS="${env_systemEmail}"

EMAIL_SENDERNAME="${env_emailSenderName}"

EMAIL_SMTPHOSTMAIL="${env_hostname}"

EMAIL_SMTPPORT="${env_smtpPort}"

EOF

    if [ "${env}" == "stage" ] || [ "${env}" == "live" ]; then
        # Die erstellte .env Datei muss noch hochgeladen werden

        if [ -z "${scp_username}" ] || [ -z "${scp_domain}" ]; then
            echo "Username für ${env} ist in .siteconfig.yaml nicht eingetragen"
            echo "Abbruch"
            exit;
        else
            # Lade datei auf Server Hoch
            mv ".env" ".envtemp"
            mv ".env${env_prefix}" .env
            scp ".env" ${scp_username}@${scp_domain}:${scp_path}/../
            rm ".env"
            mv ".envtemp" ".env"
            echo" .env datei auf Server ${env_prefix} Hochgeladen"
        fi

    fi

fi
