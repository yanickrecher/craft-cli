#!/bin/bash

# DEFAULTS
# =========================================================================

help=""

db_dump_file="db/db.sql"
db_backup_path="${HOME}/db-backups/"

# get options/arguments
while getopts :h option
do
    case "${option}"
    in
        h) help="help";;
    esac
done

# display help

if [[ "${help}" == "help" ]]; then
cat << EOF

-------------------------------------------------------------------------
HELP
-------------------------------------------------------------------------

Import a existing DB-Dump in your Nitro Database and override the existing DB.
db/db.sql will be used as source.

Requirements:
- You have to be in your project root.
- db/db.sql should exist.
- Nitro needs to be properly configured.

-------------------------------------------------------------------------

EOF
exit
fi

. craft-yaml-read

# Check if the dump file exists
if [ ! -e "${db_dump_file}" ]
then
    echo "Folder ${db_dump_file} not found. "; echo "Abort !!!"; echo
    exit
fi

# Check if backup folder exists
if [ ! -d "${db_backup_path}" ]
then
    echo "Folder ${db_backup_path} not found. "; echo "Abort !!!"; echo
    exit
fi

# Check DB vars
if [ -z $local_db_name ] || [ -z $local_db_user ] || [ -z $local_db_pwd ] || [ -z $local_docker_container_name ]; then
    cat << EOF

It looks not all variables are defined in .siteconfig.yaml:

    local_docker_container_name:  $local_docker_container_name
    local_db_name:                $local_db_name
    local_db_user:                $local_db_user
    local_db_pwd:                 $local_db_pwd
EOF
exit
fi

# Create db backup name
db_backup_date=$(date +"%Y-%m-%d_%H-%M-%S")
db_backup_filename="${local_db_name}-bk-${db_backup_date}.sql"
db_backup_filepath="${db_backup_path}${db_backup_filename}"

cat << EOF

=========================================================================
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Local Database will be OVERWRITTEN

Create Backup in:
"${db_backup_filepath}"

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
=========================================================================

EOF

read -p "You will overwrite your current DB in Nitro? [y|N] " acceptDbOverwrite
if [ "${acceptDbOverwrite}" != 'y' ]; then
    echo "Aborted !!!"; echo
    exit
fi


echo "Create backup of existing DB..."; echo
if [ -e db/db.sql ]; then
  mv db/db.sql db/db_import_temp.sql
fi

. craft-local-db-dump

if [ -e db/db.sql ]; then
  mv db/db.sql $db_backup_filepath
fi

if [ -e db/db_import_temp.sql ]; then
  mv db/db_import_temp.sql db/db.sql
fi

echo "Import db/db.sql in Nitro..."; echo

if [ -e ~/.nitro/nitro-dev.yaml ]; then
OUTPUT=$(nitro db import db/db.sql -m nitro-dev << EOF
$local_db_name
EOF
)
  echo $OUTPUT;
else
  cat db/db.sql | docker exec -i ${local_docker_container_name} /usr/bin/mysql -u${local_db_user} --password=${local_db_pwd} ${local_db_name}
fi

