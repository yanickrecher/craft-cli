#!/bin/bash

# DEFAULTS
# =========================================================================

help=""
override="";
db_dump_file="db/db.sql"
db_backup_path="${HOME}/db-backups/"


# get options/arguments
while getopts :h:o option
do
    case "${option}"
    in
        h) help="help";;
        o) override="true";;
    esac
done


# display help
# -------------------------------------------------------------------------

if [[ "${help}" == "help" ]]; then
cat << EOF

-------------------------------------------------------------------------
HELP
-------------------------------------------------------------------------

Import a existing DB-Dump in your PROD DB and override the existing DB.
db/db.sql will be used as source.

Requirements:
- You have to be in your project root.
- db/db.sql should exist.

-------------------------------------------------------------------------

EOF
exit
fi

. craft-yaml-read


# PrÃ¼fe db File
if [ ! -e "${db_dump_file}" ]; then
  echo "${db_dump_file} not found. "; echo "Abort!!!"; echo
  exit;
fi

# Check DB vars
if [ -z $prod_username ] || [ -z $prod_domain ] || [ -z $prod_db_host ] || [ -z $prod_db_name ] || [ -z $prod_db_user ] || [ -z $prod_db_pwd ]; then
  cat << EOF

It look like not all variables are defined in .siteconfig.yaml:

    prod_username: $prod_username
    prod_domain:   $prod_domain
    prod_db_host:  $prod_db_host
    prod_db_name:  $prod_db_name
    prod_db_user:  $prod_db_user
    prod_db_pwd:   $prod_db_pwd
EOF
  exit;
else
  # Check backup directory
  if [ ! -d ${db_backup_path} ]; then
    mkdir ${db_backup_path}
  fi

  # Create backup filename
  db_backup_date=$(date +"%Y-%m-%d_%H-%M-%S")
  db_backup_filename="${prod_domain}-bk-${db_backup_date}.sql"
  db_backup_filepath="${db_backup_path}${db_backup_filename}"

cat << EOF

=========================================================================
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Database "${prod_db_name}" on "${prod_domain}" will be OVERRIDDEN

Create a Backup in
"${db_backup_filepath}"

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
=========================================================================

EOF

  read -p "Override Database on PROD? [y|N] " import_db

  if [ "${import_db}" != 'y' ]; then
    echo "Abort!!!"; echo
    exit;
  else
    echo "Create Backup in ${db_backup_filepath}"; echo

    bk_cmd="mysqldump -h ${prod_db_host} --user=${prod_db_user} --password=\"${prod_db_pwd}\" --opt --default-character-set=utf8 ${prod_db_name}"
    (ssh ${prod_username}@${prod_domain} $bk_cmd) > ${db_backup_filepath}


    echo "Import db.sql on PROD: $prod_domain"; echo

    # Import DB-Dump into MySQL DB through SSH tunnel
    cmd="cat - | mysql -h ${prod_db_host} --user=${prod_db_user} --password=\"${prod_db_pwd}\" --default-character-set=utf8 ${prod_db_name}"
    cat ${db_dump_file} | (ssh ${prod_username}@${prod_domain} $cmd)
  fi
fi
